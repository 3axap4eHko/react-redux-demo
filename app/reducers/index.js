/*! Generated by redux-scfld not for editing */
'use strict';

import {
    NAMESPACE,

    POST_FETCH,

    POSTS_FETCH,

} from './../types';

import defaultState from '../state';


import postFetch from './post/fetch.js';

import postsFetch from './posts/fetch.js';


const reducers = {

    [NAMESPACE.post]: {

        [POST_FETCH]: postFetch,

    },

    [NAMESPACE.posts]: {

        [POSTS_FETCH]: postsFetch,

    },

};

export default function(state = defaultState, action) {
    const {namespace, type} = action;
    if ( state && state.has(namespace) && namespace in reducers ) {
        const prevNamespaceState = state.get(namespace);
        if ( type in reducers[namespace] ) {
            const nextNamespaceState = reducers[namespace][type](prevNamespaceState, action);
            if (typeof nextNamespaceState === 'undefined') {
                throw new Error(`State ${namespace} can't be undefined`);
            }
            return state.set(namespace, nextNamespaceState);
        } else {
            throw new Error(`Entity ${namespace}.${type} not defined`);
        }
    }
    return state;
};